# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But the  *program* should still work with grammars that don't
#      follow this convention.  So how can the program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

#1	ROOT	S .
#1	ROOT	S !
1   ROOT    S End
#1	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective

1	S	NP VP
1   S   NP VerbI
1   S   S PP
1   S   S CC.S
1   S   PRP VP

1   SBAR    Comp S

1   PP  Prep NP
1   PP  Comp S

1	VP	VerbT NP
#1   VP  VerbI
#1   VP  VerbD NP.NP
1   VP  VP CC.VP
1   VP  VP PP
#1   VP  IS Adj
1   VP  Verb5 SBAR
1   VP  Verb6 NP_SB
#1   VP  V7 NP.NP.SBAR
#1   VP  VbTing NP

#1   NP.NP   NP NP
1   NP_SB   NP SBAR
#1   NP.NP.SBAR  NP NP.SBAR

1	NP	Det Noun
1   NP  NP CC.NP
0.1	NP	NP PP
1   NP  Prep NP

1   CC.NP   CC NP
1   CC.Noun CC Noun
1   CC.VP   CC VP
1   CC.S    CC S
1   CC.SBAR CC SBAR
1   CC.VerbI    CC VerbI
1   CC.VerbT    CC VerbT

2   Noun    Adj Noun
1   Noun    Noun Noun
1   Noun    Noun PP
1   Noun    Noun CC.Noun

1   VerbI   VerbI CC.VerbI
1   VerbT   VerbT CC.VerbT

1   VbTing  IS VerbTing

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1   End .
1   End !

1   VerbT   ate
1   VerbT   wanted
1   VerbT   kissed
1   VerbT   understood
1   VerbT   pickled
1   VerbT   worked
1   VerbT   thought
#1   VerbT   sighed
1   VerbT   is
1   VerbT   eating
#1   VerbT   perplexed

1   VerbI   ate
1   VerbI   wanted
1   VerbI   kissed
1   VerbI   understood
1   VerbI   pickled
#1   VerbI   worked
1   VerbI   thought
1   VerbI   sighed
1   VerbI   is
1   VerbI   eating
1   VerbI   perplexed

1   Verb6   perplexed

1   Verb5   thought

1	Det	the
1	Det	a
1	Det	every

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1   Noun    Sally
1   Noun    desk
1   Noun    proposal
#1   Noun    thought
1   Noun    it

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled
1   Adj lazy
1   Adj very

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in
1   Prep    that

1   Comp    that

1   PRP it

1   NP  Sally

1   CC  and

1   IS  is

1   VerbTing   eating
